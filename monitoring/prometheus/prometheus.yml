# Prometheus Configuration for AI Agent Platform Monitoring
# This configuration scrapes metrics from cleanrylie, node-exporter, cadvisor,
# and sets up alerting for sandbox cost thresholds

global:
  scrape_interval: 15s      # Set the scrape interval to every 15 seconds
  evaluation_interval: 15s  # Evaluate rules every 15 seconds
  scrape_timeout: 10s       # Timeout after 10 seconds

  # Attach labels to any time series or alerts when communicating with
  # external systems (federation, remote storage, Alertmanager)
  external_labels:
    monitor: 'cleanrylie-monitor'
    environment: '${ENVIRONMENT:-production}'

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
            - alertmanager:9093
      scheme: http
      timeout: 10s
      api_version: v2

# Load rules once and periodically evaluate them
rule_files:
  - "/etc/prometheus/rules/sandbox_alerts.yml"
  - "/etc/prometheus/rules/system_alerts.yml"
  - "/etc/prometheus/rules/adf_alerts.yml"

# Scrape configurations
scrape_configs:
  # Cleanrylie application metrics
  - job_name: 'cleanrylie'
    metrics_path: '/metrics'
    scrape_interval: 10s
    scrape_timeout: 5s
    static_configs:
      - targets: ['cleanrylie-api:3000']
        labels:
          service: 'cleanrylie-api'
          component: 'api'
    honor_labels: true
    metric_relabel_configs:
      - source_labels: [__name__]
        regex: '(token_usage_total|openai_cost_usd_total|sandbox_cost_usd_current|rate_limit_hits_total|tool_execution_duration_seconds.*|adf_leads_processed_total|ai_response_latency_ms.*|handover_trigger_total|handover_dossier_generation_ms.*|handover_email_sent_total|adf_imap_disconnections_total)'
        action: keep

  # Node Exporter for system metrics
  - job_name: 'node-exporter'
    scrape_interval: 15s
    static_configs:
      - targets: ['node-exporter:9100']
        labels:
          service: 'node-exporter'
          component: 'system'
    metric_relabel_configs:
      - source_labels: [__name__]
        regex: 'node_(cpu|memory|filesystem|network|disk).*'
        action: keep

  # cAdvisor for container metrics
  - job_name: 'cadvisor'
    scrape_interval: 15s
    static_configs:
      - targets: ['cadvisor:8080']
        labels:
          service: 'cadvisor'
          component: 'containers'
    metric_relabel_configs:
      - source_labels: [__name__]
        regex: 'container_(cpu|memory|network|fs).*'
        action: keep
      - source_labels: [name]
        regex: '(cleanrylie-api|watchdog-api|vin-agent|mindsdb).*'
        action: keep

  # Prometheus self-monitoring
  - job_name: 'prometheus'
    scrape_interval: 15s
    static_configs:
      - targets: ['localhost:9090']
        labels:
          service: 'prometheus'
          component: 'monitoring'

  # AlertManager metrics
  - job_name: 'alertmanager'
    scrape_interval: 15s
    static_configs:
      - targets: ['alertmanager:9093']
        labels:
          service: 'alertmanager'
          component: 'monitoring'

  # Grafana metrics
  - job_name: 'grafana'
    scrape_interval: 15s
    static_configs:
      - targets: ['grafana:3000']
        labels:
          service: 'grafana'
          component: 'monitoring'

  # Watchdog API metrics (if available)
  - job_name: 'watchdog-api'
    scrape_interval: 15s
    metrics_path: '/metrics'
    static_configs:
      - targets: ['watchdog-api:8000']
        labels:
          service: 'watchdog-api'
          component: 'analytics'

  # VIN Agent metrics (if available)
  - job_name: 'vin-agent'
    scrape_interval: 15s
    metrics_path: '/metrics'
    static_configs:
      - targets: ['vin-agent:5000']
        labels:
          service: 'vin-agent'
          component: 'automation'

# Storage configuration
storage:
  tsdb:
    retention.time: 15d
    retention.size: 5GB
    wal_compression: true

# TSDB compaction configuration
compact:
  min_block_duration: 2h
  max_block_duration: 24h
