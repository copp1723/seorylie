{
  "name": "cleanrylie",
  "version": "1.0.0",
  "description": "ADF Lead Processing System",
  "main": "index.js",
  "scripts": {
    "dev": "NODE_ENV=development tsx server/index.ts",
    "build": "vite build && esbuild server/index.ts --platform=node --packages=external --bundle --format=esm --outdir=dist",
    "start": "NODE_ENV=production node dist/index.js",
    "preview": "npm run build && npm run start",
    "check": "tsc --noEmit",
    "typecheck": "tsc --noEmit",
    "check:watch": "tsc --noEmit --watch",
    "lint": "echo 'TypeScript strict mode checking in place of linting' && npm run check",
    "format:check": "echo 'Format checking placeholder - using TypeScript strict mode'",
    "db:push": "drizzle-kit push",
    "db:generate": "drizzle-kit generate",
    "db:studio": "drizzle-kit studio",
    "migrate": "tsx server/cli/migrate.ts",
    "migrate:rollback": "tsx server/cli/migrate.ts rollback",
    "migrate:status": "tsx server/cli/migrate.ts status",
    "migrate:validate": "tsx server/cli/migrate.ts validate",
    "test": "vitest run",
    "test:watch": "vitest",
    "test:ui": "vitest --ui",
    "test:integration": "vitest run test/integration",
    "test:unit": "vitest run test/unit",
    "test:coverage": "vitest run --coverage",
    "test:jest": "jest",
    "test:adf": "jest test/adf",
    "test:api": "vitest run test/unit",
    "test:client": "vitest run test/unit",
    "test:ads": "vitest run test/unit",
    "test:workers": "vitest run test/unit",
    "test:migrations": "echo 'Migration tests placeholder'",
    "test:rls": "echo 'RLS tests placeholder'",
    "test:e2e": "echo 'E2E tests placeholder'",
    "test:otel-trace": "echo 'OTEL trace tests placeholder'",
    "start:test": "NODE_ENV=test tsx server/index.ts",
    "test:load": "k6 run test/load/load-test-suite.js",
    "test:load:chat": "k6 run test/load/chat-load-test.js",
    "test:load:api": "k6 run test/load/api-load-test.js",
    "test:load:inventory": "k6 run test/load/inventory-load-test.js",
    "test:performance": "npm run test:load && npm run test:load:chat && npm run test:load:api",
    "test:performance:full": "tsx test/performance/run-performance-tests.ts",
    "test:setup-data": "tsx test/performance/setup-test-data.ts setup",
    "test:cleanup-data": "tsx test/performance/setup-test-data.ts cleanup",
    "test:verify-data": "tsx test/performance/setup-test-data.ts verify",
    "test:quick": "tsx test/performance/quick-test.ts",
    "test:notifications": "tsx scripts/test-notification-system.ts",
    "env:validate": "tsx scripts/validate-environment.ts",
    "env:check": "tsx scripts/check-env.ts",
    "check-env": "tsx scripts/check-env.ts",
    "test:fixtures": "jest test/fixtures",
    "test:mocks": "jest test/mocks",
    "test:integration-mocks": "jest test/integration --setupFilesAfterEnv='<rootDir>/test/setup/mocks.ts'",
    "test:adf-mocks": "jest test/adf --setupFilesAfterEnv='<rootDir>/test/setup/mocks.ts'",
    "test:ci": "jest --coverage --ci --watchAll=false",
    "build:server": "esbuild server/index.ts --platform=node --packages=external --bundle --format=esm --outdir=dist",
    "deploy:check": "tsx scripts/deployment-readiness-check.ts",
    "clean": "rm -rf dist build coverage .nyc_output",
    "clean:deps": "rm -rf node_modules package-lock.json && npm install",
    "setup": "npm install && npm run env:validate && npm run db:push",
    "health": "curl -s http://localhost:3000/health | npx prettyjson",
    "adf:health": "curl -s http://localhost:3000/api/health/email | npx prettyjson"
  },
  "dependencies": {
    "@bull-board/api": "^5.8.0",
    "@bull-board/express": "^5.8.0",
    "@sendgrid/mail": "^7.7.0",
    "@trpc/client": "^10.37.1",
    "@trpc/react-query": "^10.37.1",
    "@trpc/server": "^10.37.1",
    "axios": "^1.5.0",
    "bcrypt": "^5.1.1",
    "bottleneck": "^2.19.5",
    "bull": "^4.11.3",
    "bullmq": "^4.11.4",
    "colors": "^1.4.0",
    "compression": "^1.7.4",
    "cookie-parser": "^1.4.6",
    "cors": "^2.8.5",
    "csv-writer": "^1.6.0",
    "date-fns": "^2.30.0",
    "dotenv": "^16.3.1",
    "drizzle-orm": "^0.28.6",
    "drizzle-zod": "^0.5.1",
    "express": "^4.18.2",
    "express-jwt": "^8.4.1",
    "express-rate-limit": "^7.0.1",
    "express-session": "^1.17.3",
    "express-validator": "^7.0.1",
    "fast-xml-parser": "^4.2.7",
    "handlebars": "^4.7.8",
    "helmet": "^7.0.0",
    "imap": "^0.8.19",
    "jsonwebtoken": "^9.0.2",
    "lodash": "^4.17.21",
    "mailparser": "^3.6.5",
    "morgan": "^1.10.0",
    "nodemailer": "^6.9.5",
    "openai": "^4.0.0",
    "p-retry": "^5.1.2",
    "pg": "^8.11.3",
    "pino": "^8.15.1",
    "pino-pretty": "^10.2.0",
    "prom-client": "^14.2.0",
    "redis": "^4.6.8",
    "twilio": "^4.17.0",
    "uuid": "^9.0.0",
    "winston": "^3.10.0",
    "ws": "^8.13.0",
    "xml-parser": "^1.2.1",
    "xml2js": "^0.6.2",
    "zod": "^3.22.2"
  },
  "devDependencies": {
    "@jest/globals": "^29.5.0",
    "@playwright/test": "^1.38.0",
    "@types/bcrypt": "^5.0.0",
    "@types/compression": "^1.7.3",
    "@types/cookie-parser": "^1.4.4",
    "@types/cors": "^2.8.14",
    "@types/express": "^4.17.17",
    "@types/express-session": "^1.17.7",
    "@types/imap": "^0.8.37",
    "@types/jest": "^29.5.0",
    "@types/jsonwebtoken": "^9.0.3",
    "@types/lodash": "^4.14.195",
    "@types/mailparser": "^3.4.0",
    "@types/node": "^20.6.3",
    "@types/nodemailer": "^6.4.10",
    "@types/pg": "^8.10.2",
    "@types/react": "^18.2.15",
    "@types/react-dom": "^18.2.7",
    "@types/supertest": "^2.0.12",
    "@types/uuid": "^9.0.2",
    "@types/ws": "^8.5.5",
    "@types/xml-parser": "^1.2.30",
    "@types/xml2js": "^0.4.12",
    "@typescript-eslint/eslint-plugin": "^6.0.0",
    "@typescript-eslint/parser": "^6.0.0",
    "@vitejs/plugin-react": "^4.0.3",
    "autoprefixer": "^10.4.14",
    "concurrently": "^8.2.1",
    "eslint": "^8.45.0",
    "eslint-plugin-react-hooks": "^4.6.0",
    "eslint-plugin-react-refresh": "^0.4.3",
    "jest": "^29.5.0",
    "jest-html-reporter": "^3.10.0",
    "jest-junit": "^16.0.0",
    "jest-mock-extended": "^3.0.5",
    "jest-sonar-reporter": "^2.0.0",
    "mock-fs": "^5.2.0",
    "mock-req-res": "^1.2.1",
    "mockdate": "^3.0.5",
    "nock": "^13.3.3",
    "postcss": "^8.4.27",
    "prettyjson": "^1.2.5",
    "supertest": "^6.3.3",
    "tailwindcss": "^3.3.3",
    "ts-jest": "^29.1.0",
    "ts-node": "^10.9.1",
    "ts-node-dev": "^2.0.0",
    "tsx": "^3.12.7",
    "typescript": "^5.0.2",
    "vite": "^4.4.5",
    "vitest": "^0.34.4",
    "prettyjson": "^1.2.1"
  },
  "jest-junit": {
    "outputDirectory": "test-results/jest",
    "outputName": "junit.xml",
    "classNameTemplate": "{classname}",
    "titleTemplate": "{title}",
    "ancestorSeparator": " â€º ",
    "usePathForSuiteName": "true"
  }
}
